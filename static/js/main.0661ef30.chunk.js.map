{"version":3,"sources":["data/db.js","Layout/Header.js","utils/api/index.js","Layout/NavigationBar.js","Layout/decks/new/CreateDeck.js","Layout/NotFound.js","Layout/decks/study/StudyCards.js","Layout/decks/study/Study.js","Layout/decks/DrawDeck.js","Layout/decks/DrawDecks.js","Layout/decks/new/DrawCard.js","Layout/decks/new/DrawCards.js","Layout/decks/new/DeckAndCards.js","Layout/decks/edit/EditDeck.js","Layout/cards/CardFormData.js","Layout/cards/AddCard.js","Layout/cards/EditCard.js","Layout/home/Home.js","Layout/index.js","App.js","index.js"],"names":["module","exports","Header","className","require","decks","cards","signal","a","result","map","deck","filter","card","deckId","id","Headers","append","maxDeckId","reduce","acc","Math","max","push","readDeck","find","Number","updatedDeck","index","findIndex","deleteDeck","splice","maxCardId","updatedCard","cardId","NavigationBar","navItems","url","useRouteMatch","aria-label","to","item","length","CreateDeck","useState","deckName","setDeckName","deckDescription","setDeckDescription","history","useHistory","abortControllers","setAbortControllers","onSubmit","event","preventDefault","lastIndex","abort","_abortPreviousCall","newAbortController","AbortController","createDeck","name","description","then","htmlFor","type","aria-describedby","placeholder","required","value","onChange","target","rows","NotFound","StudyCards","flip","setFlip","currentIndex","setCurrentIndex","back","front","onClick","window","confirm","current","min","Study","useParams","setDeck","useEffect","abortController","catch","e","console","log","message","DrawDeck","DrawDecks","setDecks","listDecks","DrawCard","cardState","setCardState","deleteCard","DrawCards","DeckAndCards","EditDeck","updateDeck","alert","CardFormData","setFront","setBack","placeholde","AddCard","createCard","EditCard","parseInt","updateCard","Home","path","exact","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0661ef30.chunk.js","sourcesContent":["\nmodule.exports={\n  \"decks\": [\n    {\n      \"id\": 1,\n      \"name\": \"Rendering in React\",\n      \"description\": \"React's component structure allows for quickly building a complex web application that relies on DOM manipulation. \"\n    },\n    {\n      \"name\": \"React Router\",\n      \"description\": \"React Router is a collection of navigational components that compose declaratively with your application.\",\n      \"id\": 2\n    }\n  ],\n  \"cards\": [\n    {\n      \"id\": 1,\n      \"front\": \"Differentiate between Real DOM and Virtual DOM.\",\n      \"back\": \"Virtual DOM updates are faster but do not directly update the HTML\",\n      \"deckId\": 1\n    },\n    {\n      \"id\": 2,\n      \"front\": \"How do you modify the state of a different React component?\",\n      \"back\": \"Not at all! State is visible to the component only.\",\n      \"deckId\": 1\n    },\n    {\n      \"id\": 3,\n      \"front\": \"How do you pass data 'down' to a React child component?\",\n      \"back\": \"As properties or props\",\n      \"deckId\": 1\n    },\n    {\n      \"front\": \"What path will match the follow Route?\\n<Route>\\n  <NotFound />\\n</Route>\",\n      \"back\": \"All paths. A route with no path matches all URL's\",\n      \"deckId\": 2,\n      \"id\": 4\n    },\n    {\n      \"front\": \"What does <Switch> do?\",\n      \"back\": \"Renders the first matching child <Route> \",\n      \"deckId\": 2,\n      \"id\": 5\n    },\n    {\n      \"cards\": [],\n      \"front\": \"b\",\n      \"back\": \"b\",\n      \"deckId\": 0,\n      \"id\": 7\n    }\n  ]\n}\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","const { decks , cards }=require(\"../../data/db\");\n\n\n/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\n//const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n\n// function stripCards(deck) {\n//   const { cards, ...deckWithoutCards } = deck;\n//   return deckWithoutCards;\n// }\n\n\n\n\nexport async function listDecks(signal) {\n  const result=decks.map((deck)=>{\n    deck.cards=cards.filter(card=>card.deckId===deck.id);\n    return deck;\n  });\n  return result;\n}\n\nlet maxDeckId=decks.reduce((acc,{id})=>Math.max(acc,id),0);\n\nexport async function createDeck(deck, signal) {\n  deck.id=++maxDeckId;\n  decks.push(deck);\n  return deck;\n}\n\nexport async function readDeck(deckId, signal) {\n  const result= decks.find(deck=>deck.id===Number(deckId));\n  result.cards=cards.filter(card=>card.deckId===Number(deckId));\n  return result;\n}\n\nexport async function updateDeck(updatedDeck, signal) {\n  updatedDeck.id=Number(updatedDeck.id);\n  const index=decks.findIndex(deck=>deck.id===updatedDeck.id);\n  decks[index]=updatedDeck;\n  return decks[index];\n}\n\nexport async function deleteDeck(deckId, signal) {\n  const index=decks.findIndex(deck=>deck.id===Number(deckId));\n  return decks.splice(index,1);\n}\n\n\nexport async function listCards(deckId, signal) {\n  const deckCards=cards.filter(card=>card.deckId===Number(deckId));\n  return deckCards;\n}\n\nlet maxCardId=cards.reduce((acc,{id})=>Math.max(acc,id),0);\n\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  \n  card.id=++maxCardId;\n  card.deckId=Number(deckId);\n  cards.push(card);\n  return card;\n}\n\nexport async function readCard(cardId, signal) {\n  const result= cards.find(card=>card.id===Number(cardId));\n  return result;\n}\n\nexport async function updateCard(updatedCard, signal) {\n  updatedCard.id=Number(updatedCard.id);\n  const index=cards.findIndex(card=>card.id===updatedCard.id);\n  cards[index]=updatedCard;\n  return cards[index];\n}\n\nexport async function deleteCard(cardId, signal) {\n  const index=cards.findIndex(card=>card.id===Number(cardId));\n  return cards.splice(index,1);\n}\n","import  React from \"react\";\nimport { useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavigationBar({ navItems }) {\n  const { url } = useRouteMatch();\n  return (\n    <div>\n      <nav className=\"breadcrumb\" aria-label=\"breadcrumb\">\n            <Link to=\"/\" className=\"breadcrumb-item \">\n              <span className=\"oi oi-home mr-1\"></span>Home\n            </Link>\n          {navItems.map((item, index) => (\n              index===navItems.length-1 ?\n              <Link key={index} className=\"breadcrumb-item active\" to={url}>{item}</Link> :\n              <Link key={index} className=\"breadcrumb-item \" to={url}>{item}</Link> \n          ))}\n      </nav>\n    </div>\n  );\n}\n\nexport default NavigationBar;\n","import  React, {useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { createDeck } from \"../../../utils/api\";\nimport NavigationBar from \"../../NavigationBar\";\n\nfunction CreateDeck() {\n  const [deckName, setDeckName] = useState(\"\");\n  const [deckDescription, setDeckDescription] = useState(\"\");\n  const history = useHistory();\n\n  const [abortControllers, setAbortControllers] = useState([]);\n  const _abortPreviousCall = () => {\n    if (abortControllers.length) {\n      const lastIndex = abortControllers.length - 1;\n      const lastAbortController = abortControllers[lastIndex];\n      lastAbortController.abort();\n    }\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    _abortPreviousCall();\n    const newAbortController = new AbortController();\n    setAbortControllers([...abortControllers, newAbortController]);\n    const deck = {\n      name: deckName,\n      description: deckDescription,\n    };\n    /*Used setTimer just to test the Abort functionality and to see if it will be aborted\n      if the user make another submit attemp */\n    // setTimeout(() => {\n    //   createDeck(deck, newAbortController.signal);\n    // }, 2000);\n    createDeck(deck, newAbortController.signal).then(({id})=>history.push(\"/decks/\"+id));\n  };\n  return (\n    <div>\n      <NavigationBar navItems={[\"Creat Deck\"]} />\n      <h2>Create Deck</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"deckName\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"deckName\"\n            aria-describedby=\"newDeck\"\n            placeholder=\"Deck Name\"\n            required\n            value={deckName}\n            onChange={({ target: { value } }) => {\n              setDeckName(value);\n            }}\n          />\n          <small id=\"newDeck\" className=\"form-text text-muted\">\n            This field is requuired\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            className=\"form-control\"\n            id=\"description\"\n            placeholder=\"Brief description of the deck\"\n            rows=\"3\"\n            required\n            value={deckDescription}\n            onChange={({ target: { value } }) => {\n              setDeckDescription(value);\n            }}\n          />\n        </div>\n        <button type=\"reset\" className=\"btn btn-dark mr-2\">\n          Cancel\n        </button>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\nexport default CreateDeck;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\"\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, {useState} from \"react\";\nimport { useHistory } from \"react-router\";\n// import { listCards } from \"../../../utils/api\";\n\nfunction StudyCards({cards}){\n    \n    const [flip,setFlip]=useState(false);\n    const [currentIndex,setCurrentIndex]=useState(0);\n\n    const history=useHistory();\n\n    const handleNext=()=>{\n        if (currentIndex===cards.length-1){\n            const result = window.confirm(\"Restart cards? \\n\\nClick 'Cancel' to return to the home page.\");\n            if (result){\n                setFlip(false);\n                setCurrentIndex(0);\n                return;\n                //history.go(0);\n            }else{\n                history.push(\"/\");\n            }\n        }\n        setCurrentIndex((current)=>Math.min(cards.length-1,current+1));\n        setFlip(!flip);\n    };\n\n    \n    if (cards.length<=2){\n        return (\n            <div>\n                <h2>Not enough cards.</h2>\n                <p>You need at least 3 cards to study. There are {cards.length} in the deck.</p>\n            </div>\n        );\n    }\n    \n    return(\n        <div className=\"card border border-primary mb-5\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Card {currentIndex+1} of {cards.length}</h5>\n                <p className=\"card-text\">{flip? cards[currentIndex].back : cards[currentIndex].front}</p>\n                <button type=\"button\" className=\"btn btn-dark mr-2\" onClick={()=>{setFlip(!flip)}}>Flip</button>\n                {flip && <button type=\"button\" className=\"btn btn-primary\" onClick={handleNext}>Next</button>}\n            </div>\n        </div>\n    );\n\n    \n}\n\nexport default StudyCards;","import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router\";\nimport {readDeck} from \"../../../utils/api\"\nimport NavigationBar from \"../../NavigationBar\";\nimport NotFound from \"../../NotFound\";\nimport StudyCards from \"./StudyCards\";\n\nfunction Study(){\n    const {deckId}=useParams();\n    const [deck,setDeck]=useState({});\n    useEffect(()=>{\n        const abortController= new AbortController();\n        readDeck(deckId,abortController.signal).then(setDeck).catch((e)=>{\n            console.log(\"Error inside Study.js: \",e.message);\n            return <NotFound />;\n        });\n        return ()=>abortController.abort();\n    },[deckId]);\n\n    if (!deck.id){\n        return <NotFound />;\n    }\n    return(\n        <div>\n             <NavigationBar navItems={[deck.name,\"Study\"]} />\n             <h2>Study : {deck.name}</h2>\n             <StudyCards cards={deck.cards} />\n        </div>\n       \n    );\n}\n\n\n\nexport default Study;","import  React  from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {useHistory} from \"react-router\";\nimport { deleteDeck } from \"../../utils/api\";\n\nfunction DrawDeck({ deck }) {\n  const history=useHistory();  \n  const handleDeckDelete = () => {\n    if (\n      window.confirm(\"Delete This Deck?\\n\\nDeck will be deleted permanently\")\n    ) {\n      deleteDeck(deck.id).then(() => {\n        history.push(\"/NotFound\");\n        history.push(\"/\");\n      }).catch((e)=>{\n          history.push(\"/NotFound\");\n        });\n    }\n  };\n  return (\n    <div className=\"card border border-primary mt-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          {deck.name}{\" \"}\n          <small className=\"float-right\">{deck.cards.length} cards</small>\n        </h5>\n        <p className=\"card-text\">{deck.description}</p>\n        <Link\n          to={`/decks/${deck.id}`}\n          type=\"button\"\n          className=\"btn btn-lg btn-dark mr-1\"\n        >\n          <span className=\"oi oi-eye\"></span> View\n        </Link>\n        <Link\n          to={`/decks/${deck.id}/study`}\n          type=\"button\"\n          className=\"btn btn-lg btn-primary\"\n        >\n          <span className=\"oi oi-book\"></span> Study\n        </Link>\n        {/* <Link to={`/`} type=\"button\" className=\"btn btn-lg btn-danger float-right\" ><span className=\"oi oi-trash\"></span></Link> */}\n        <button\n          type=\"button\"\n          onClick={handleDeckDelete}\n          className=\"btn btn-danger  mr-2 float-right\"\n        >\n          <span className=\"oi oi-trash \"></span>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default DrawDeck;\n","import React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\"\nimport {listDecks} from \"../../utils/api\"\nimport DrawDeck from \"./DrawDeck\";\n\n\nfunction DrawDecks(){\n    const [decks,setDecks]=useState([]);\n    useEffect(()=>{\n        const abortController= new AbortController();\n        listDecks(abortController.signal).then(setDecks);\n        return () => abortController.abort(); // Cancels any pending request or response;\n    },[]);\n    if (!decks){\n        return (<p>not not found anything</p>);\n    }\n    if (!decks){\n        return <p></p>\n    }\n\n    return (\n        <div>\n            <Link to={`/decks/new`} type=\"button\" className=\"btn btn-lg btn-dark\"><span className=\"oi oi-plus\"></span> Create Deck</Link>\n            {decks.map((deck,index)=><DrawDeck deck={deck} key={index}/>)}\n        </div>\n        \n    );\n}\n\nexport default DrawDecks;","import  React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useRouteMatch } from \"react-router\";\nimport { deleteCard } from \"../../../utils/api\";\n\nfunction DrawCard({ card }) {\n  const { url } = useRouteMatch(); //  /decks/1\n  const [cardState,setCardState]=useState({...card});\n  console.log(\"card: \",card);\n  console.log(\"cardState: \",cardState);\n  //before change\n  //before\n    \n  const deleteHandler=()=>{\n        const result=window.confirm(`Delete this card? \\n\\n You will not be able to recover card Id: ${card.id}.`);\n        if (result){\n          deleteCard(card.id);\n          setCardState({});\n          //history.push(`${url}`);\n        }\n  }\n\n  if (!cardState.id){\n    return <p>Deleted Card</p>;\n  }\n\n  return (\n    <div className=\"row border border-secondary\">\n      <div className=\"col col-6\">\n        <p>{cardState.front}</p>\n      </div>\n      <div className=\"col col-6\">\n        <p>{cardState.back}</p>\n        <section className=\"d-flex justify-content-end mb-2\">\n          <Link\n            to={`${url}/cards/${cardState.id}/edit`}\n            className=\"btn btn-secondary mr-2\"\n          >\n            <span className=\"oi oi-pencil\"></span> Edit\n          </Link>\n          <button className=\"btn btn-danger float-right\" onClick={deleteHandler}>\n            <span className=\"oi oi-trash\"></span>\n          </button>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default DrawCard;\n","import React from \"react\";\nimport DrawCard from \"./DrawCard\";\n\nfunction DrawCards({cards}){\n    if (!cards.length){\n        return <h4 className=\"alert alert-info\">No Cards In This Deck</h4>\n    }\n    // console.log(\"Loging cards from Cards.js: \",cards);\n    \n    return(\n        <div >\n            <h2>Cards</h2>\n            {cards.map((card,index)=><DrawCard key={index} card={card} />)}\n        </div>\n    );\n\n}\n\nexport default DrawCards;","import  React, {useEffect, useState } from \"react\";\nimport { useHistory, useParams, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { deleteDeck, readDeck } from \"../../../utils/api\";\nimport DrawCards from \"./DrawCards\";\nimport NavigationBar from \"../../NavigationBar\";\nimport NotFound from \"../../NotFound\";\n\nfunction DeckAndCards() {\n  const [deck, setDeck] = useState({});\n  // const [cards,setCards]=useState([]);\n  const { deckId } = useParams();\n  const { url } = useRouteMatch();\n  const history=useHistory();\n\n  useEffect(() => {\n      const abortController = new AbortController();\n      readDeck(deckId, abortController.signal).then(setDeck).catch((e)=>console.log(e.message));\n      return () => abortController.abort();\n    \n  }, [deckId]);\n  const handleDeckDelete = () => {\n    if (\n      window.confirm(\"Delete This Deck?\\n\\nDeck will be deleted permanently\")\n    ) {\n      deleteDeck(deckId).then(()=>{\n          history.push(\"/\");\n        });\n    }\n  };\n\n  if (!deck.id) {\n    return <NotFound />;\n  }\n  return (\n    <div>\n      <div className=\"mb-5\">\n        <NavigationBar navItems={[deck.name]} />\n        <h2>{deck.name}</h2>\n        <p>{deck.description}</p>\n        <Link\n          to={`${url}/edit`}\n          type=\"button\"\n          className=\"btn btn-secondary  mr-2\"\n        >\n          <span className=\"oi oi-pencil\"></span> Edit\n        </Link>\n        <Link to={`${url}/study`} className=\"btn btn-primary  mr-2\">\n          <span className=\"oi oi-book\"></span> Study\n        </Link>\n        <Link to={`${url}/cards/new`} type=\"button\" className=\"btn btn-primary  mr-2\">\n          <span className=\"oi oi-plus\"></span> Add Cards\n        </Link>\n        <button\n          type=\"button\"\n          onClick={handleDeckDelete}\n          className=\"btn btn-danger  mr-2 float-right\">\n          <span className=\"oi oi-trash \"></span>\n        </button>\n      </div>\n      <div>\n        <DrawCards cards={deck.cards} />\n      </div>\n    </div>\n  );\n}\n\nexport default DeckAndCards;\n","import React, {useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport {Link} from \"react-router-dom\"\nimport { updateDeck, readDeck} from \"../../../utils/api\";\nimport NavigationBar from \"../../NavigationBar\";\nimport NotFound from \"../../NotFound\";\n\nfunction EditDeck() {\n  const [deckName, setDeckName] = useState(\"\");\n  const [deckDescription, setDeckDescription] = useState(\"\");\n  const history = useHistory();\n  const {deckId}=useParams();  \n  useEffect(()=>{\n      const abortController= new AbortController();\n      readDeck(deckId,abortController.signal).then((deck)=>{\n          setDeckName(deck.name);\n          setDeckDescription(deck.description);\n      }).catch(()=>history.push(\"/NotFound\"));\n      return ()=>abortController.abort();\n  },[deckId]);\n\n  const [abortControllers, setAbortControllers] = useState([]);\n  const _abortPreviousCall = () => {\n    if (abortControllers.length) {\n      const lastIndex = abortControllers.length - 1;\n      const lastAbortController = abortControllers[lastIndex];\n      lastAbortController.abort();\n    }\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    _abortPreviousCall();\n    const newAbortController = new AbortController();\n    setAbortControllers([...abortControllers, newAbortController]);\n    const editedDeck = {\n      id: deckId,   \n      name: deckName,\n      description: deckDescription,\n    };\n    updateDeck(editedDeck, newAbortController.signal).then(({id})=>{\n        window.alert(\"Deck Info Updated\");\n        history.push(\"/decks/\"+id);\n    });\n    console.log(\"attemp submit\");\n  };\n\n  return (\n    <div>\n      <NavigationBar navItems={[deckName,\"Edit Deck\"]} />\n      <h2>Edit Deck</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"deckName\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"deckName\"\n            aria-describedby=\"newDeck\"\n            placeholder=\"Deck Name\"\n            required\n            value={deckName}\n            onChange={({ target: { value } }) => {\n              setDeckName(value);\n            }}\n          />\n          <small id=\"newDeck\" className=\"form-text text-muted\">\n            This field is requuired\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            className=\"form-control\"\n            id=\"description\"\n            placeholder=\"Brief description of the deck\"\n            rows=\"3\"\n            required\n            value={deckDescription}\n            onChange={({ target: { value } }) => {\n              setDeckDescription(value);\n            }}\n          />\n        </div>\n        <Link to={`/decks/${deckId}`} className=\"btn btn-dark mr-2\">\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\nexport default EditDeck;\n","import  React  from \"react\";\n\nexport default function CardFormData({ front, setFront, back, setBack }){\n  return (\n      <div>\n        <div className=\"form-group\">\n          <label htmlFor=\"front\">Front</label>\n          <textarea\n            id=\"front\"\n            className=\"form-control\"\n            placeholde=\"Front side of card\"\n            rows=\"3\"\n            required\n            value={front}\n            onChange={({ target: { value } }) => setFront(value)}\n          />\n          <small className=\"form-text text-muted\">\n            Please provide a question\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"back\">Back</label>\n          <textarea\n            id=\"back\"\n            className=\"form-control\"\n            placeholder=\"Back side of the card\"\n            rows=\"3\"\n            required\n            value={back}\n            onChange={({ target: { value } }) => setBack(value)}\n          />\n        </div>\n      </div>\n          \n  );\n};\n","import  React, {useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../../utils/api\";\nimport NavigationBar from \"../NavigationBar\";\nimport NotFound from \"../NotFound\";\nimport CardFormData from \"./CardFormData\";\n\nfunction AddCard() {\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState({});\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal)\n      .then(setDeck)\n      .catch((e) => {\n        return <NotFound />;\n      });\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (!deck) {\n    return <NotFound />;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const card = {\n      front,\n      back,\n    };\n    createCard(deckId, card)\n      .then(window.alert(\"New card Aded to the deck\"))\n      .catch(console.log);\n    setFront(\"\");\n    setBack(\"\");\n  };\n\n  return (\n    <div>\n      <NavigationBar navItems={[deck.name, \"Add Card\"]} />\n      <h2>{deck.name}: AddCard</h2>\n      <form onSubmit={handleSubmit}>\n        <CardFormData\n          front={front}\n          setFront={setFront}\n          back={back}\n          setBack={setBack}\n        />\n\n        <Link\n          to={`/decks/${deckId}`}\n          className=\"form-button btn btn-lg btn-secondary mr-2\"\n        >\n          Done\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary btn-lg\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddCard;\n","import  React, {useEffect, useState } from \"react\";\nimport { useParams,useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { updateCard, readDeck } from \"../../utils/api\";\nimport NavigationBar from \"../NavigationBar\";\nimport NotFound from \"../NotFound\";\nimport CardFormData from \"./CardFormData\";\n\nfunction EditCard() {\n  const { deckId,cardId } = useParams();\n  const [deck, setDeck] = useState({});\n  const [front, setFront] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const history=useHistory();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal)\n      .then((deck)=>{\n          setDeck(deck);\n          const card=deck.cards.find((card)=>card.id===parseInt(cardId));\n          setFront(card.front);\n          setBack(card.back);\n        })\n      .catch((e) => {\n        return <NotFound />;\n      });\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (!deck) {\n    return <NotFound />;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const card = {\n      id:cardId,  \n      front,\n      back,\n    };\n    updateCard(card)\n      .then(window.alert(\"Card Info Was Updated\"))\n      .catch(console.log).then(history.push(`/decks/${deckId}`));\n    \n  };\n\n  return (\n    <div>\n      <NavigationBar navItems={[deck.name, \"Edit Card \"+cardId]} />\n      {/* <h2>{deck.name}: AddCard</h2> */}\n      <form onSubmit={handleSubmit}>\n\n        <CardFormData\n          front={front}\n          setFront={setFront}\n          back={back}\n          setBack={setBack}\n        />\n\n        <Link\n          to={`/decks/${deckId}`}\n          className=\"form-button btn btn-lg btn-secondary mr-2\"\n        >\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary btn-lg\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default EditCard;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CreateDeck from \"../decks/new/CreateDeck\";\nimport Study from \"../decks/study/Study\";\nimport DrawDecks from \"../decks/DrawDecks\";\nimport NotFound from \"../NotFound\";\nimport DeckAndCards from \"../decks/new/DeckAndCards\";\nimport EditDeck from \"../decks/edit/EditDeck\";\nimport AddCard from \"../cards/AddCard\";\nimport EditCard from \"../cards/EditCard\";\n\n\n\nfunction Home(){\n    return(\n            <Switch>\n                <Route path=\"/\" exact={true}> \n                    <DrawDecks />\n                </Route>\n                <Route path={\"/decks/new\"}>\n                    <CreateDeck />\n                </Route>\n                <Route path={\"/decks/:deckId/study\"}>\n                    <Study />\n                </Route>\n                <Route path={\"/decks/:deckId/edit\"}>\n                    <EditDeck />\n                </Route>\n                <Route path=\"/decks/:deckId/cards/new\">\n                    <AddCard />\n                </Route>\n                <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n                    <EditCard />\n                </Route>\n\n                <Route path=\"/decks/:deckId\">\n                    <DeckAndCards />\n                </Route>\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n    );\n}\nexport default Home;","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport Header from \"./Header\";\nimport Home from \"./home/Home\";\nimport NotFound from \"./NotFound\";\n\nfunction Layout() {\n  return (\n    \n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n        <Header />\n        <Switch>\n          <Route path=\"/\">\n              <Home />\n          </Route>\n          <Route>\n              <NotFound />\n          </Route>\n\n        </Switch>\n        \n      </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}